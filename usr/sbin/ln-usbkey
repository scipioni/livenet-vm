#!/bin/bash
# not dash please

USBPATH=$1
MONITOR_PORT=4444
COMMAND=$2

log() {
   echo "$1"
   logger -t usb-livenet "$1"
}

udevadm info --query=all --export --path ${USBPATH}
log "USBPATH: ${USBPATH}"

# output example
# DEVPATH=/devices/pci0000:00/0000:00:16.2/usb3/3-1/3-1:1.0
# DEVTYPE=usb_interface
# DRIVER=usb-storage
# INTERFACE=8/6/80
# MODALIAS=usb:v0951p1603d0200dc00dsc00dp00ic08isc06ip50
# PRODUCT=951/1603/200
# SUBSYSTEM=usb
# TYPE=0/0/0
# UDEV_LOG=3

USER=





do_notify() {
    for i in 10 30 50 70 90; do echo $i; sleep 2; done | zenity --progress --no-cancel --auto-close --text="operazione in corso"
}

connect_usb() {
    UUID=$1
    USBUUID=$2
    Address=$3
    log "su -s /bin/sh -c 'VBoxManage controlvm ${UUID} usbattach ${Address}' ${USER}"
    su -s /bin/sh -c "VBoxManage controlvm ${UUID} usbattach ${Address}" ${USER}
}

find_usb() {
    UUID=$1

    log "Searching USB with ${VendorID}:${ProductID} on UUID=${UUID}"
    VBoxManage list usbhost | while read param value; do
     log "${param}=${value}"
     case $param in
       UUID*)  
        USBUUID=$value
        ;;
       Address*)
        Address=$value
        ;;
       VendorId*)
        vendorid=${value:2:4}
        ;;
       ProductId*)
        productid=${value:2:4}
        ;;
       Current*)
        # this is last entry in "list usbhost"
        if [ "$productid" = "${ProductID}" ] && [ "$vendorid" = "${VendorID}" ]; then
             connect_usb ${UUID} ${USBUUID} ${Address}
             return
        fi
        ;;
       esac
    done
}

do_vbox_usb() {
   log "usb notify on vbox (virtualbox)"
   su -s /bin/bash -c "VBoxManage list --long vms" ${USER}  | while read param value; do
      case "${param}" in 
         UUID*) 
            UUID=${value}
            log "UUID=$UUID"
           ;;
         State*)
           log "param='$value'"
           if [[ "${value}" == *running* ]]; then
              find_usb ${UUID} && do_notify
              break
           fi
           ;;
      esac
   done
}

do_kvm_usb_raw() {
    VendorID=$1
    ProductID=$2
    echo 'device_add usb-host,vendorid=0x${VendorID},productid=0x${ProductID}'
    echo 'device_add usb-host,vendorid=0x${VendorID},productid=0x${ProductID}' | nc localhost ${MONITOR_PORT} -w1

    [ $? = 0 ] && do_notify &
}

do_kvm_usb_fs() {
    log "do_kvm_usb_fs"    

    if [ "${COMMAND}" = "--remove" ]; then
        log "remove ${DEVNAME} ${SHARE}"    
        killall smbd
        umount -f ${DEVNAME} > /dev/null 2>&1
        exit 0
    fi

    mkdir -p ${SHARE}
    # da definire meglio
    killall smbd
    umount ${SHARE}

    if [ "${SCAN}" = "true" ]; then
        log "scanning for virus ..."

        mount ${DEVNAME} ${SHARE} -o uid=root,ro > /dev/null 2>&1
        result=$?
        if [ ${result} != 0 ]; then
            if [ "${DEVTYPE}" = "partition" ]; then
                zenity --error --text "Impossibile utilizzare la chiavetta ${DEVNAME}" &
            fi
            return
        fi    

        log "calling ln-client --user ${USER} --scan ${SHARE}"
        /usr/bin/ln-client --user ${USER} --scan ${SHARE} & # background needed to avoid udev timeout
        umount ${DEVNAME} >/dev/null 2>&1
        mount ${DEVNAME} ${SHARE} -o uid=${USER},rw,sync > /dev/null 2>&1
    else
        mount ${DEVNAME} ${SHARE} -o uid=${USER},rw > /dev/null 2>&1
    fi
}


USER=$( ps -C ratpoison -o user= )
if [ "${USER}" = "ssm" ]; then
    if [ "${COMMAND}" = "--remove" ]; then
        umount -f ${DEVNAME} > /dev/null 2>&1
    else
        S=/media/ssm/usbkey
        mkdir -p ${S}
        log "detected ssm user, mount ${DEVNAME} on ${S}"
        mount ${DEVNAME} ${S} -o uid=${USER},rw,sync > /dev/null 2>&1
    fi
    exit 0
fi

VM=""
USER=$( ps -C qemu-system-x86_64 -o user= )
if [ -n "${USER}" ]; then
    VM=kvm
    pidvm=$( ps -C qemu-system-x86_64 -o pid= | tr -d ' ' )
else
    USER=$( ps -C VBoxXPCOMIPCD -o user= )
    if [ -n "${USER}" ]; then
        VM=vbox
        pidvm=$( ps -C VBoxXPCOMIPCD -o pid= | tr -d ' ' )
    fi
fi

[ -z "${VM}" ] && exit 0

if [ -n "${USER}" ]; then
    export DISPLAY=:0.0 
    HOME=$( getent passwd ${USER} | awk -F: '{print $6}' )
    export XAUTHORITY=${HOME}/.Xauthority
fi
    
USB_FS=
if [ -e /proc/${pidvm}/cwd/.setup ]; then
    source /proc/${pidvm}/cwd/.setup
else
    if [ -e /proc/${pidvm}/cwd/.config ]; then
        source /proc/${pidvm}/cwd/.config
    fi
fi

[ "${COMMAND}" = "--remove" ] && exit 0

if [ "${USB_FS}" = "true" ]; then
    [ "${DEVTYPE}" = "partition" ] || [ "${DEVTYPE}" = "disk" ] || exit 0
    log "detected VM:${VM} in USB_FS mode"
    [ "${VM}" = "kvm" ] && do_kvm_usb_fs
    exit 0
fi
    
if [ "${DEVTYPE}" = "disk" ] && [ -n "${ID_VENDOR_ID}" ] && [ -n "${ID_MODEL_ID}" ]; then
    log "usb grabbing PATH=${USBPATH} VendorID=${ID_VENDOR_ID} ProductID=${ID_MODEL_ID}"

    [ "${VM}" = "kvm" ] && do_kvm_usb_raw ${ID_VENDOR_ID} ${ID_MODEL_ID}
    [ "${VM}" = "vbox" ] && do_vbox_usb
fi

exit 0
